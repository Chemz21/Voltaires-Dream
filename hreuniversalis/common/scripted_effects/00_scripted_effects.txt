#Unsorted Scripted effects:

#General effect for extending or adding province modifier
#Province Scope
add_or_extend_province_modifier_effect = {
	if = {
		limit = {
			has_province_modifier = $MODIFIER$
		}
		extend_province_modifier = { name = $MODIFIER$ duration = $DURATION$ }
	}
	else = {
		add_province_modifier = { name = $MODIFIER$ duration = $DURATION$ }
	}
}

#Used in army professionalism event:
#used where FROM is a province and ROOT is a country, ie onaction for provinces fallen
add_loot_from_province_effect = { 
	if = {
		limit = {
			FROM = {
				NOT = { development = 18 }
			}
		}
		add_treasury = 115
		add_mil_power = 15
	}
	if = {
		limit = {
			FROM = {
				development = 18
				NOT = { development = 21 }
			}
		}
		add_treasury = 135
		add_mil_power = 15
	}
	if = {
		limit = {
			FROM = {
				development = 21
				NOT = { development = 24 }
			}
		}
		add_treasury = 155
		add_mil_power = 25
	}
	if = {
		limit = {
			FROM = {
				development = 24
				NOT = { development = 27 }
			}
		}
		add_treasury = 180
		add_mil_power = 30
	}
	if = {
		limit = {
			FROM = {
				development = 27
				NOT = { development = 30 }
			}
		}
		add_treasury = 210
		add_mil_power = 40
	}
	if = {
		limit = {
			FROM = {
				development = 30
				NOT = { development = 33 }
			}
		}
		add_treasury = 230
		add_mil_power = 50
	}
	if = {
		limit = {
			FROM = {
				development = 33
			}
		}
		add_treasury = 250
		add_mil_power = 55
	}
}

#Generalized version of the same effect, for use in province scope.
#used where ROOT is a province, ie onaction for provinces fallen
#$LOOTER$ is the scope of the tag performing the Looting (so for instance owner)
add_loot_from_rich_province_general_effect = { 
	add_devastation = 80
	remove_loot = {
		who = $LOOTER$
		amount = 1000
	}
	if = {
		limit = {
			NOT = { development = 18 }
		}
		$LOOTER$ = {
			add_treasury = 400
			add_mil_power = 15
		}
	}
	if = {
		limit = {
			development = 18
			NOT = { development = 21 }
		}
		$LOOTER$ = {
			add_treasury = 435
			add_mil_power = 15
		}
	}
	if = {
		limit = {
			development = 21
			NOT = { development = 24 }
		}
		$LOOTER$ = {
			add_treasury = 455
			add_mil_power = 25
		}
	}
	if = {
		limit = {
			development = 24
			NOT = { development = 27 }
		}
		$LOOTER$ = {
			add_treasury = 480
			add_mil_power = 30
		}
	}
	if = {
		limit = {
			development = 27
			NOT = { development = 30 }
		}
		$LOOTER$ = {
			add_treasury = 510
			add_mil_power = 40
		}
	}
	if = {
		limit = {
			development = 30
			NOT = { development = 33 }
		}
		$LOOTER$ = {
			add_treasury = 530
			add_mil_power = 50
		}
	}
	if = {
		limit = {
			development = 33
		}
		$LOOTER$ = {
			add_treasury = 550
			add_mil_power = 55
		}
	}
}

#Religious Schools:
#Country Scope
clear_religious_scholar_modifiers_effect = {
	remove_country_modifier = hanafi_scholar_modifier
	remove_country_modifier = hanbali_scholar_modifier
	remove_country_modifier = maliki_scholar_modifier
	remove_country_modifier = shafii_scholar_modifier
	remove_country_modifier = ismaili_scholar_modifier
	remove_country_modifier = jafari_scholar_modifier
	remove_country_modifier = zaidi_scholar_modifier
	remove_country_modifier = ibadi_scholar_modifier	
	remove_country_modifier = azraqi_scholar_modifier	
	remove_country_modifier = sufri_scholar_modifier	
	remove_country_modifier = alevi_scholar_modifier	
	remove_country_modifier = alawi_scholar_modifier	
	remove_country_modifier = nizari_scholar_modifier	
	remove_country_modifier = qarmati_scholar_modifier
	remove_country_modifier = ashkenazi_scholar_modifier	
	remove_country_modifier = sephardi_scholar_modifier	
	remove_country_modifier = mizrahi_scholar_modifier
}

#Move capital along with all that also needs to be done. Used in capital decisions.
#THIS = Province Scope, ROOT = Country Scope
move_capital_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			ROOT = {
				is_part_of_hre = no
			}
		}
		set_in_empire = no
		emperor = {
			add_opinion = {
				who = ROOT
				modifier = hre_province_left
			}
		}
		add_imperial_influence = -1
	}
	if = {
		limit = { is_capital = no }
		ROOT = {
			set_capital = PREV
		}
	}
}

#Same as move_capital_effect, but for when you want to move PREV's rather than ROOT's capital
#THIS = Province Scope, PREV = Country Scope
prev_move_capital_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			PREV = {
				is_part_of_hre = no
			}
		}
		set_in_empire = no
		PREV = {
			emperor = {
				add_opinion = {
					who = PREV
					modifier = hre_province_left
				}
			}
		}
		add_imperial_influence = -1
	}
	if = {
		limit = { is_capital = no }
		PREV = {
			set_capital = PREV
		}
	}
}

remove_non_electors_emperors_from_empire_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			is_elector = no
			is_emperor = no
		}
		custom_tooltip = remove_non_electors_emperors_from_empire_effect_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					is_part_of_hre = yes
				}
				set_in_empire = no
			}
		}
	}
}

abolish_slavery_effect = {
	custom_tooltip = abolished_slavery_act_tooltip
	hidden_effect = {
		every_owned_province = {
			limit = {
				trade_goods = slaves
			}
			change_trade_goods = unknown
			remove_building = tradecompany
		}
	}
}


add_vassalise_cb_effect = {
	add_casus_belli = {
		type = cb_vassalize_mission
		months = 300
		target = ROOT
	}
}


remove_vassalise_cb_effect = {
	if = {
		limit = {
			has_casus_belli = {
				type = cb_vassalize_mission
				target = event_target:agenda_country
			}
		}
		remove_casus_belli = {
			type = cb_vassalize_mission
			target = event_target:agenda_country
		}
	}
}

#Ends the normal Revolution disaster (if you have it) and clears all related modifiers and flags
clear_standard_revolution_elements_effect = {
	if = {
		limit = {
			has_disaster = revolution
		}
		end_disaster = revolution
	}

	clr_country_flag = religious_revolution
	clr_country_flag = serfdom
	clr_country_flag = social_reform
	clr_country_flag = royal_bureaucracy
	clr_country_flag = deplorable_reign
	clr_country_flag = road_to_bankruptcy
	clr_country_flag = financial_crisis
	clr_country_flag = revolutionary_philosopher
	remove_country_modifier = religious_intolerance
	remove_country_modifier = religious_tolerance
	remove_country_modifier = restrict_serfdom
	remove_country_modifier = enforce_serfdom
	remove_country_modifier = suppress_free_thinkers
	remove_country_modifier = bureaucratic_reduction
	remove_country_modifier = bureaucratic_expansion
	remove_country_modifier = support_monarch
	remove_country_modifier = oppose_monarch
	remove_country_modifier = mint_money
	remove_country_modifier = fight_inflation
	remove_country_modifier = disarmament
	remove_country_modifier = financial_disaster
}

enact_revolution_effect = {
	disband_rebels = revolutionary_rebels
	disband_rebels = anti_tax_rebels
	hidden_effect = {
		if = {	
			limit = {
				any_subject_country = {
					has_country_modifier = colony_inspired_by_revolution
				}
			}
			every_subject_country = {
				remove_country_modifier = colony_inspired_by_revolution
			}
		}
		if = {
			limit = {
				OR = {
					has_disaster = french_revolution
					has_country_flag = use_french_disaster_exile_effect
				}
				has_regency = no
			}
			set_country_flag = ruler_of_france_exiled
		}
		if = {
			limit = {
				OR = {
					has_disaster = french_revolution
					has_country_flag = use_french_disaster_exile_effect
				}
				has_heir = yes
			}
			exile_heir_as = heir_of_france
			set_country_flag = heir_of_france_exiled
		}
	}
	if = {
		limit = { is_emperor_of_china = yes }
		dismantle_empire_of_china = yes
		set_global_flag = empire_of_china_dismantled
	}
	if = {
		limit = { NOT = { government = republic } }
		change_government_to_republic = yes
	}
	if = {
		limit = {
			revolution_target_exists = yes
		}
		add_government_reform = junior_revolutionary_republic_reform
	}
	else = {
		add_government_reform = revolutionary_republic_reform
		set_revolution_target = ROOT
	}
	if = {
		limit = { has_reform = parliamentary_reform }
		remove_government_reform = parliamentary_reform
	}
	if = {
		limit = { has_reform = states_general_reform }
		remove_government_reform = states_general_reform
	}
	if = {
		limit = {
			OR = {
				has_disaster = french_revolution
				has_country_flag = use_french_disaster_exile_effect
			}
		}
		hidden_effect = {
			exile_ruler_as = ruler_of_france
		}
	}
	else = {
		kill_ruler = yes
	}

	add_yearly_manpower = 5

	if = {
		limit = {
			has_country_flag = revolution_disaster_reactionary
		}
		add_country_modifier = {
			name = reactionaries_failed
			duration = 9125
		}
	}

	if = {
		limit = {
			has_country_flag = revolution_disaster_immediate_revolution
		}
		clr_country_flag = revolution_disaster_immediate_revolution
	}
	set_country_flag = revolutionary_republic_flag
}

#province scope
add_half_industrialization_effect = {
	if = {
		limit = {
			is_institution_enabled = industrialism
			NOT = { industrialism = 100 }
		}
		add_institution_embracement = {
			which = industrialism
			value = 50
		}
	}
}

#province scope
add_quarter_industrialization_effect = {
	if = {
		limit = {
			is_institution_enabled = industrialism
			NOT = { industrialism = 100 }
		}
		add_institution_embracement = {
			which = industrialism
			value = 25
		}
	}
}

#province scope, chooses which random monarch point bonus to give for agendas
choose_random_development_bonus_effect = {
	random_list = {
		1 = { set_province_flag = add_base_tax_flag }
		1 = { set_province_flag = add_base_production_flag }
		1 = { set_province_flag = add_base_manpower_flag }
	}
}

apply_random_development_bonus_bonus_effect = {
	trigger_switch = {
		on_trigger = has_province_flag
		add_base_tax_flag = { add_base_tax = 1 }
		add_base_production_flag = { add_base_production = 1 }
		add_base_manpower_flag = { add_base_manpower = 1 }
	}
	clear_random_development_bonus_flags_effect = yes
}

clear_random_development_bonus_flags_effect = {
	clr_province_flag = add_base_tax_flag
	clr_province_flag = add_base_production_flag
	clr_province_flag = add_base_manpower_flag
}
#province scope, should be used whenever the revolution is removed from a province
remove_revolution_from_province_effect = {
	hidden_effect = { set_revolution_in_province = no }
	custom_tooltip = no_spread_here_for_15_years_tt
	add_province_modifier = {
		name = no_revolution_here_dummy
		duration = 5475
		hidden = yes
	}
}


spawn_small_scaled_rebels = {
	#always specify type
	#specify saved_name = <saved_name> if you want to use one of those
	#specify leader and leader_dynasty if you want to do it that way
	#otherwise state "no_defined_leader = yes"
	if = {
		limit = {
			owner = {
				total_development = 1000
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 500
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 200
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 1.5
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 1.5
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 1.5
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else = {
		[[no_defined_leader]
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 1
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 1
				type = $type$
				leader = $saved_name$
			}
		]
	}
}

spawn_large_scaled_rebels = {
	#always specify type
	#specify saved_name = <saved_name> if you want to use one of those
	#specify leader and leader_dynasty if you want to do it that way
	#otherwise state "no_defined_leader = yes"
	if = {
		limit = {
			owner = {
				total_development = 2000
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 1000
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 500
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 200
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 2.5
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 2.5
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 2.5
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else = {
		[[no_defined_leader]
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $saved_name$
			}
		]
	}
}


#country scope. Currently just applies to the Hansa, if future ones are added, update the flags
#Used in nation formation decisions
restore_country_name_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_country_flag = is_hanseatic_league_flag
			}
			clr_country_flag = is_hanseatic_league_flag
		}

		if = {
			limit = {
				has_country_flag = is_pirates_of_omis_flag
			}
			clr_country_flag = is_pirates_of_omis_flag
		}
	}
}

change_government_to_republic = {
	if = {
		limit = {
			NOT = { government = republic }
		}
		change_government = republic
		change_government_reform_progress = -200
	}
}

change_government_to_monarchy = {
	if = {
		limit = {
			NOT = { government = monarchy }
		}
		if = {
			limit = {
				government = republic
			}
			change_government = monarchy
			change_government_reform_progress = -400
		}
		else = {
			change_government = monarchy
			change_government_reform_progress = -200
		}
	}
}

change_government_to_theocracy = {
	if = {
		limit = {
			NOT = { government = theocracy }
		}
		if = {
			limit = {
				government = republic
			}
			change_government = theocracy
			change_government_reform_progress = -400
		}
		else = {
			change_government = theocracy
			change_government_reform_progress = -200
		}
	}
}

change_government_to_tribal = {
	if = {
		limit = {
			NOT = { government = tribal }
		}
		change_government = tribal
		change_government_reform_progress = -800
	}
}

add_ruler_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			OR = {
				religion = finnish_pagan
				religion = maausko
			}
		}
		add_ruler_personality = ancestor_$key$_personality
	}
	else = {
		add_ruler_personality = $key$_personality
	}
}

add_heir_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			OR = {
				religion = finnish_pagan
				religion = maausko
			}
		}
		add_heir_personality = ancestor_$key$_personality
	}
	else = {
		add_heir_personality = $key$_personality
	}
}

add_queen_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			OR = {
				religion = finnish_pagan
				religion = maausko
			}
		}
		add_queen_personality = ancestor_$key$_personality
	}
	else = {
		add_queen_personality = $key$_personality
	}
}

remove_ruler_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			OR = {
				religion = finnish_pagan
				religion = maausko
			} 
		}
		remove_ruler_personality = ancestor_$key$_personality
	}
	else = {
		remove_ruler_personality = $key$_personality
	}
}

remove_heir_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			OR = {
				religion = finnish_pagan
				religion = maausko
			} 
		}
		remove_heir_personality = ancestor_$key$_personality
	}
	else = {
		remove_heir_personality = $key$_personality
	}
}

remove_queen_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			OR = {
				religion = finnish_pagan
				religion = maausko
			}
		}
		remove_queen_personality = ancestor_$key$_personality
	}
	else = {
		remove_queen_personality = $key$_personality
	}
}

#The three effects below are used for setting a great project to exact the tier
#I tried to combine the three effects into one single scripted effect, but I couldn't figure a way out to do the effect without having to do a lot of custom tooltip
#Sets monument tier 1 (has no effect if the monument is tier 1 or higher)
#Province scope
set_great_project_tier_1 = {
	if = {
		limit = {
			has_dlc = "Leviathan"
		}
		if = {
			limit = {
				has_great_project = {	#Asks the EXACT tier unlike other triggers
					type = $type$
					tier = 0
				}
			}
			add_great_project_tier = {
				type = $type$
				tier = 1
			}
		}
	}
}

#Sets monument tier 2 (has no effect if the monument is tier 2 or higher)
#Province scope
set_great_project_tier_2 = {
	if = {
		limit = {
			has_dlc = "Leviathan"
		}
		if = {
			limit = {
				has_great_project = {
					type = $type$
					tier = 2
				}
			}
			random_list = {
				1 = { add_base_tax = 4 }
				1 = { add_base_production = 4 }
				1 = { add_base_manpower = 4 }
			}
		}
		if = {
			limit = {
				has_great_project = {
					type = $type$
					tier = 1
				}
				NOT = {
					has_great_project = {
						type = $type$
						tier = 2
					}
				}
			}
			add_great_project_tier = {
				type = $type$
				tier = 1
			}
			random_list = {
				1 = { add_base_tax = 2 }
				1 = { add_base_production = 2 }
				1 = { add_base_manpower = 2 }
			}
		}
		if = {
			limit = {
				has_great_project = {	#Asks the EXACT tier unlike other triggers
					type = $type$
					tier = 0
				}
				NOT = {
					has_great_project = {
						type = $type$
						tier = 1
					}
				}
			}
			add_great_project_tier = {
				type = $type$
				tier = 2
			}
		}
	}
	else = {
		add_base_tax = 1
		add_base_production = 1
		add_base_manpower = 1
	}
}

#Sets monument tier 3 (has no effect if the monument is tier 3 or higher)
#Province scope
set_great_project_tier_3 = {
	if = {
		limit = {
			has_dlc = "Leviathan"
		}
		if = {
			limit = {
				has_great_project = {

					type = $type$
					tier = 3
				}
			}
			random_list = {
				1 = { add_base_tax = 6 }
				1 = { add_base_production = 6 }
				1 = { add_base_manpower = 6 }
			}
		}
		if = {
			limit = {
				has_great_project = {
					type = $type$
					tier = 2
				}
				NOT = {
					has_great_project = {
						type = $type$
						tier = 3
					}
				}
			}
			add_great_project_tier = {
				type = $type$
				tier = 1
			}
			random_list = {
				1 = { add_base_tax = 4 }
				1 = { add_base_production = 4 }
				1 = { add_base_manpower = 4 }
			}
		}
		if = {
			limit = {
				has_great_project = {
					type = $type$
					tier = 1
				}
				NOT = {
					has_great_project = {
						type = $type$
						tier = 2
					}
				}
			}
			add_great_project_tier = {
				type = $type$
				tier = 2
			}
			random_list = {
				1 = { add_base_tax = 2 }
				1 = { add_base_production = 2 }
				1 = { add_base_manpower = 2 }
			}
		}
		if = {
			limit = {
				has_great_project = {	#Asks the EXACT tier unlike other triggers
					type = $type$
					tier = 0
				}
				NOT = {
					has_great_project = {
						type = $type$
						tier = 1
					}
				}
			}
			add_great_project_tier = {
				type = $type$
				tier = 3
			}
		}
	}
	else = {
		add_base_tax = 2
		add_base_production = 2
		add_base_manpower = 2
	}
}

#Country effect
create_colony_mission_reward = {
	if = {
		limit = {
			$province$ = {
				is_empty = yes
			}
		}
		$province$ = {
			add_siberian_construction = 400
		}
		if = {
			limit = {
				has_age_ability = ab_colony_boost_development
			}
			$province$ = {
				add_base_tax = 1
				add_base_production = 1
				add_base_manpower = 1
			}
		}
	}
	else_if = {
		limit = {
			owns = $province$
		}
		$province$ = {
			add_base_tax = 1
			add_base_production = 1
			add_base_manpower = 1
		}
	}
	else_if = {
		limit = {
			NOT = { is_permanent_claim = $province$ }
		}
		add_permanent_claim = $province$
	}
}

#Provine effect
create_colony_mission_reward_province = {
	if = {
		limit = {
			is_empty = yes
		}
		add_siberian_construction = 400
		if = {
			limit = {
				$country$ = {
					has_age_ability = ab_colony_boost_development
				}
			}
			add_base_tax = 1
			add_base_production = 1
			add_base_manpower = 1
		}
	}
	else_if = {
		limit = {
			owned_by = $country$
		}
		add_base_tax = 1
		add_base_production = 1
		add_base_manpower = 1
	}
	else_if = {
		limit = {
			NOT = { is_permanent_claim = $country$ }
		}
		add_permanent_claim = $country$
	}
}

#Province effect
remove_random_development = {
	if = {
		limit = {
			base_tax = 2
			base_production = 2
			base_manpower = 2
		}
		random_list = {
			33 = {
				add_base_tax = -1
			}
			33 = {
				add_base_production = -1
			}
			33 = {
				add_base_manpower = -1
			}
		}
	}
	else_if = {
		limit = {
			base_tax = 2
			base_production = 2
		}
		random_list = {
			50 = {
				add_base_tax = -1
			}
			50 = {
				add_base_production = -1
			}
		}
	}
	else_if = {
		limit = {
			base_tax = 2
			base_manpower = 2
		}
		random_list = {
			50 = {
				add_base_tax = -1
			}
			50 = {
				add_base_manpower = -1
			}
		}
	}
	else_if = {
		limit = {
			base_manpower = 2
			base_production = 2
		}
		random_list = {
			50 = {
				add_base_manpower = -1
			}
			50 = {
				add_base_production = -1
			}
		}
	}
	else_if = {
		limit = {
			base_tax = 2
		}
		add_base_tax = -1
	}
	else_if = {
		limit = {
			base_production = 2
		}
		add_base_production = -1
	}
	else_if = {
		limit = {
			base_manpower = 2
		}
		add_base_manpower = -1
	}
}

#Country effect
add_legitimacy_equivalent = {
	add_legitimacy = $amount$
	add_horde_unity = $amount$
	add_devotion = $amount$
	add_meritocracy = $amount$
	add_republican_tradition = $republican_tradition$	#This one is special because of how much republics scale with it
}

#Country effect
##########################################################
# Supports following privileges
# estate_burghers_hydraulic_rights
# estate_nobles_cawa_peace_keepers
# estate_nobles_cawa_offensive_fighters
# estate_burghers_control_over_the_mint
# estate_dhimmi_guarantee_of_traditions
# estate_church_yakobs_churches
# estate_nobles_grant_power_to_the_bashorun
# estate_burghers_forest_expansion
# estate_burghers_mountain_expansion
# estate_nobles_leidang_conscription
# estate_burghers_orthodox_tolerance
# estate_church_anti_heresy_act
# estate_nobles_religious_conscription
##########################################################
# When adding new privileges then make sure that a unlock_privilege_$estate_privilege$_tt is defined in the localization
# For checking if an estate privilege is unlocked already, use has_unlocked_estate_privilege = { estate_privilege = $estate_privilege$ }
# For localization write the following: "Enable the [Root.<Estate Name>] privilege '§Y<Privilege Name>§!'."
unlock_estate_privilege = {
	custom_tooltip = unlock_privilege_$estate_privilege$_tt
	hidden_effect = {
		set_country_flag = unlocked_privilege_$estate_privilege$
	}
}

#Country effect
##########################################################
# Supports following merc companies
# merc_oyo_cavalry
# merc_hakkapeliita_cavalry
# merc_prussian_volunteer_army
# merc_large_hakkapeliita_cavalry
# merc_guerilla_hakkapeliita_cavalry
# merc_elite_hakkapeliita_cavalry
# merc_schwarze_garde
# merc_hessian_jaegerkorps
# merc_doppelsoeldner
# merc_frisian_free_company
# merc_flemish_company
# merc_reislaufer
##########################################################
# When adding a new merc company then make sure that a unlock_$merc_company$_tt is defined in the localization
# For checking if a merc company is unlocked already, use has_unlocked_merc_company = { merc_company = $merc_company$ }
# For localization write the following: "Unlock the mercenary company §Y<Merc Company>§! to recruit."
unlock_merc_company = {
	custom_tooltip = unlock_$merc_company$_tt
	hidden_effect = {
		set_country_flag = unlocked_$merc_company$
	}
	[[free_merc]
		custom_tooltip = costs_no_army_professionalism
	]
	[[global]
		custom_tooltip = global_merc_company
		hidden_effect = {
			set_global_flag = global_unlocked_$merc_company$
		}
	]
}

#Same as above, but this time it makes a company unavailable
#Does not support any merc company yet
#lock_merc_company = {
#	custom_tooltip = lock_$merc_company$_tt
#	hidden_effect = {
#		clr_country_flag = unlocked_$merc_company$
#	}
#}

##########################################################
# Supports following government reforms
# prussian_monarchy
# prussian_republic_reform
# prussian_theocratic_reform
# holy_horde_reform
# crusading_kingdom_reform
# militarized_crusader_order_reform
# allotment_system
##########################################################
# When adding a new government reform then make sure that a unlock_$government_reform$_tt is defined in the localization
# For checking if a government reform is unlocked already, use has_unlocked_government_reform = { government_reform = $government_reform$ }
# For localization write the following: "Unlock the government reform §Y<Government Reform>§!."
unlock_government_reform = {
	custom_tooltip = unlock_$government_reform$_tt
	hidden_effect = {
		set_country_flag = unlocked_$government_reform$
	}
}

#Country effect
##########################################################
# Supports following government reforms
# estate_cossacks
##########################################################
# When adding a new estate then make sure that a unlock_$estate$_tt is defined in the localization
# For checking if an Estate is unlocked already, use has_unlocked_estate = { estate = $estate$ }
# For localization write the following: "Unlock the §Y<Estate>§! Estate."
unlock_estate = {
	custom_tooltip = unlock_$estate$_tt
	hidden_effect = {
		set_country_flag = unlocked_$estate$
	}
	[[show_conditions]
		custom_tooltip = is_unavailable_$estate$
	]
}

halves_parliament_bribe_costs = {
    if = {
        limit = { has_dlc = "Common Sense" }
        custom_tooltip = halves_parliament_bribe_costs_tt
    }
    set_country_flag = halved_parliament_bribe_costs
}

#Country effect
add_increase_same_religion_opinion = {
	custom_tooltip = increase_same_religion_opinion_tt
	hidden_effect = {
		set_country_flag = has_increased_religios_opinion
		every_known_country = {
			limit = {
				OR = {
					ROOT = { has_harmonized_with = PREV }
					religion = ROOT
				}
				NOT = {
					has_opinion_modifier = {
						who = ROOT
						modifier = increased_same_religion
					}
				}
			}
			add_opinion = {
				who = ROOT
				modifier = increased_same_religion
			}
			reverse_add_opinion = {
				who = ROOT
				modifier = increased_same_religion
			}
		}
	}
}

#Country effect
remove_increase_same_religion_opinion = {
	custom_tooltip = remove_increase_same_religion_opinion_tt
	hidden_effect = {
		clr_country_flag = has_increased_religios_opinion
		every_country = {
			limit = {
				has_opinion_modifier = {
					who = ROOT
					modifier = increased_same_religion
				}
			}
			remove_opinion = {
				who = ROOT
				modifier = increased_same_religion
			}
			reverse_remove_opinion = {
				who = ROOT
				modifier = increased_same_religion
			}
		}
	}
}

#Country effect
add_increase_opinion_of_fetishists = {
	custom_tooltip = add_increase_opinion_of_fetishists_when_same_religion_tt
	hidden_effect = {
		set_country_flag = has_increased_fetishist_same_religion_opinion
		if = {
			limit = {
				religion = shamanism
			}
			every_known_country = {
				limit = {
					religion = shamanism
					NOT = {
						has_opinion_modifier = {
							who = ROOT
							modifier = increased_fetishist_opinion
						}
					}
				}
				add_opinion = {
					who = ROOT
					modifier = increased_fetishist_opinion
				}
				reverse_add_opinion = {
					who = ROOT
					modifier = increased_fetishist_opinion
				}
			}
		}
	}
}

#Country effect - make sure to add an own custom tooltip in form of: "Every §Y$religion$§! country will have their opinion of [Root.GetName] increased by §G+50§!."
add_opinion_of_religion = {
	hidden_effect = {
		set_country_flag = has_improve_opinion_flag
		set_country_flag = has_increased_$religion$_opinion
		every_known_country = {
			limit = {
				religion = $religion$
				NOT = {
					has_opinion_modifier = {
						who = ROOT
						modifier = increased_religion_opinion
					}
				}
			}
			add_opinion = {
				who = ROOT
				modifier = increased_religion_opinion
			}
			reverse_add_opinion = {
				who = ROOT
				modifier = increased_religion_opinion
			}
		}
	}
}

#Country effect - make sure to add a custom localization like: "Remove the opinion bonus of $religion$ countries for §Y[Root.GetName]§!."
remove_religious_opinion_for_scope = {
	hidden_effect = {
		clr_country_flag = has_improve_opinion_flag
		clr_country_flag = has_increased_$religion$_opinion
		every_country = {
			limit = {
				religion = $religion$
				has_opinion_modifier = {
					who = ROOT
					modifier = increased_religion_opinion
				}
			}
			remove_opinion = {
				who = ROOT
				modifier = increased_religion_opinion
			}
			reverse_remove_opinion = {
				who = ROOT
				modifier = increased_religion_opinion
			}
		}
	}
}

#Country effect
add_temporary_colonist = {
	add_country_modifier = {
		name = temporary_colonist
		duration = $duration$
	}
	custom_tooltip = add_temporary_colonist_tt
}

#Country effect - Mission reward
allow_baseline_invite_scholar = {
	custom_tooltip = allows_every_time_invite_of_$religious_school$
	hidden_effect = {
		set_country_flag = can_always_invite_$religious_school$
	}
	[[religious_school_modifier]
		tooltip = {
			add_country_modifier = {
				name = $religious_school_modifier$
				duration = -1
			}
		}
	]
}

#Country effect
#Make sure to make your own custom tooltip for it because parameters can't be given as input. Sadly.
transfer_treasury = {
	#custom_tooltip = transfer_treasury_tt	#Transfer §Y[$giver$.$variable$.GetValue]§! Ducats to $Y[$taker$.GetName]§!.
	hidden_effect = {
		$giver$ = {
			while = {
				limit = {
					check_variable = {
						which = $variable$
						value = 1
					}
				}
				$taker$ = {
					add_treasury = 1
				}
				add_treasury = -1
				subtract_variable = {
					which = $variable$
					value = 1
				}
			}
			multiply_variable = {
				which = $variable$
				value = 100
			}
			while = {
				limit = {
					check_variable = {
						which = $variable$
						value = 1
					}
				}
				$taker$ = {
					add_treasury = 0.01
				}
				add_treasury = -0.01
				subtract_variable = {
					which = $variable$
					value = 1
				}
			}
		}
	}
	[[custom_tooltip]
		custom_tooltip = $custom_tooltip$
	]
}

#Country effect
enable_propogate_religion_effect = {
	custom_tooltip = enable_propogate_religion_effect_tt
	hidden_effect = {
		set_country_flag = can_use_propagate_religion
	}
}

#Country effect
disable_propogate_religion_effect = {
	custom_tooltip = disable_propogate_religion_effect_tt
	hidden_effect = {
		clr_country_flag = can_use_propagate_religion
	}
}

#Country effect
enable_propogate_religion_immunity = {
	custom_tooltip = enable_propogate_religion_immunity_tt
	hidden_effect = {
		set_country_flag = immunity_against_propogate_religion
	}
}

#Country effect
disable_propogate_religion_immunity = {
	custom_tooltip = disable_propogate_religion_immunity_tt
	hidden_effect = {
		clr_country_flag = immunity_against_propogate_religion
	}
}

#Country effect
enable_propogate_religion_in_abrahamic_provinces = {
	custom_tooltip = enable_propogate_religion_in_abrahamic_provinces_tt
	hidden_effect = {
		set_country_flag = can_propagate_religion_in_abrahamic_provinces
	}
}

#Country effect
disable_propogate_religion_in_abrahamic_provinces = {
	custom_tooltip = disable_propogate_religion_in_abrahamic_provinces_tt
	hidden_effect = {
		clr_country_flag = can_propagate_religion_in_abrahamic_provinces
	}
}

#Country effect
set_prestige_to_zero = {
	custom_tooltip = set_prestige_to_zero_tt
	hidden_effect = {
		add_prestige = -200
		add_prestige = 100
	}
}

#Country effect
enable_cult_for_heirs = {
	custom_tooltip = enable_cult_for_heirs_tt
	hidden_effect = {
		set_country_flag = enabled_cult_for_heirs
		if = {
			limit = {
				has_heir = yes
			}
			country_event = {
				id = fetishist_flavor.600
			}
		}
	}
}

#Country effect
enable_cult_for_heirs_mission = {
	custom_tooltip = enable_cult_for_heirs_tt
	hidden_effect = {
		if = {
			limit = { has_estate_privilege = estate_church_heir_shrine }
			remove_estate_privilege = estate_church_heir_shrine
		}
		set_country_flag = enabled_cult_for_heirs
		set_country_flag = heir_cult_through_missions
		if = {
			limit = {
				has_heir = yes
			}
			country_event = {
				id = fetishist_flavor.600
			}
		}
	}
}

#Country effect
remove_heir_cult = {
	trigger_switch = {
		on_trigger = has_country_modifier
		junior_yemoja_cult =                   { remove_country_modifier = junior_yemoja_cult }
		junior_roog_cult =                     { remove_country_modifier = junior_roog_cult }
		junior_nyame_cult =                    { remove_country_modifier = junior_nyame_cult }
		junior_cwezi_cult =                    { remove_country_modifier = junior_cwezi_cult }
		junior_central_african_ancestor_cult = { remove_country_modifier = junior_central_african_ancestor_cult }
		junior_mwari_cult =                    { remove_country_modifier = junior_mwari_cult }
		junior_enkai_cult =                    { remove_country_modifier = junior_enkai_cult }
		junior_waaq_cult =                     { remove_country_modifier = junior_waaq_cult }
		junior_zanahary_cult =                 { remove_country_modifier = junior_zanahary_cult }
		junior_christianity_cult =             { remove_country_modifier = junior_christianity_cult }
		junior_islam_cult =                    { remove_country_modifier = junior_islam_cult }
		junior_buddhism_cult =                 { remove_country_modifier = junior_buddhism_cult }
		junior_norse_cult =                    { remove_country_modifier = junior_norse_cult }
		junior_jewish_cult =                   { remove_country_modifier = junior_jewish_cult }
		junior_zoroastrian_cult =              { remove_country_modifier = junior_zoroastrian_cult }
	}
}

disable_cult_for_heirs = {
	custom_tooltip = disable_cult_for_heirs_tt
	hidden_effect = {
		remove_heir_cult = yes
		clr_country_flag = enabled_cult_for_heirs
	}
}

#Country effect
unlock_cult_through_selection = {
	custom_tooltip = unlock_cult_through_selection_tt
	hidden_effect = {
		country_event = {
			id = fetishist_flavor.601
		}
	}
}

#Province effect
spawn_country_religious_rebels = {
	owner = {
		trigger_switch = {
			on_trigger = religion
			anglican =              { PREV = { spawn_rebels = { type = anglican_rebels size = $size$ } } }
			hussite =               { PREV = { spawn_rebels = { type = hussite_rebels size = $size$ } } }
			animism =               { PREV = { spawn_rebels = { type = animism_rebels size = $size$ } } }
			bogomilist =  			{ PREV = { spawn_rebels = { type = bogomilist_rebels size = $size$ } } }
			buddhism =              { PREV = { spawn_rebels = { type = buddhism_rebels size = $size$ } } }
			cathar =              	{ PREV = { spawn_rebels = { type = cathar_rebels size = $size$ } } }
			catholic =              { PREV = { spawn_rebels = { type = catholic_rebels size = $size$ } } }
			catholique =            { PREV = { spawn_rebels = { type = catholique_rebels size = $size$ } } }
			coptic =                { PREV = { spawn_rebels = { type = coptic_rebels size = $size$ } } }
			dievturiba =            { PREV = { spawn_rebels = { type = dievturiba_rebels size = $size$ } } }
			druwi =                 { PREV = { spawn_rebels = { type = druwi_rebels size = $size$ } } }
			druze =                 { PREV = { spawn_rebels = { type = druze_rebels size = $size$ } } }
			egyptian_religion =     { PREV = { spawn_rebels = { type = egyptian_religion_rebels size = $size$ } } }
			finnish_pagan =			{ PREV = { spawn_rebels = { type = finnish_pagan_rebels size = $size$ } } }
			fraticelli =            { PREV = { spawn_rebels = { type = fraticelli_rebels size = $size$ } } }
			hellenic =   			{ PREV = { spawn_rebels = { type = hellenic_pagan_rebels size = $size$ } } }
			iconoclast =   			{ PREV = { spawn_rebels = { type = iconoclast_rebels size = $size$ } } }
			ibadi =                 { PREV = { spawn_rebels = { type = ibadi_rebels size = $size$ } } }
			jewish =                { PREV = { spawn_rebels = { type = jewish_rebels size = $size$ } } }
			khabze =                { PREV = { spawn_rebels = { type = khabze_rebels size = $size$ } } }
			lollardy =				{ PREV = { spawn_rebels = { type = lollardy_religion_rebels size = $size$ } } }
			maausko =               { PREV = { spawn_rebels = { type = maausko_rebels size = $size$ } } }
			mandaeism =				{ PREV = { spawn_rebels = { type = mandaeism_rebels size = $size$ } } }
			monothelite = 			{ PREV = { spawn_rebels = { type = monothelite_rebels size = $size$ } } }
			nestorian =             { PREV = { spawn_rebels = { type = nestorian_rebels size = $size$ } } }
			norse_pagan_reformed =  { PREV = { spawn_rebels = { type = norse_pagan_reformed_rebels size = $size$ } } }
			orthodox =              { PREV = { spawn_rebels = { type = orthodox_rebels size = $size$ } } }
			paulician =           	{ PREV = { spawn_rebels = { type = paulician_rebels size = $size$ } } }
			protestant =            { PREV = { spawn_rebels = { type = protestant_rebels size = $size$ } } }
			reformed =              { PREV = { spawn_rebels = { type = reformed_rebels size = $size$ } } }
			shamanism =             { PREV = { spawn_rebels = { type = shamanism_rebels size = $size$ } } }
			shiite =                { PREV = { spawn_rebels = { type = shiite_rebels size = $size$ } } }
			slavic_pagan =			{ PREV = { spawn_rebels = { type = slavic_pagan_rebels size = $size$ } } }
			sunni =                 { PREV = { spawn_rebels = { type = sunni_rebels size = $size$ } } }
			tengri_pagan_reformed = { PREV = { spawn_rebels = { type = tengri_pagan_reformed_rebels size = $size$ } } }
			uatsdin =				{ PREV = { spawn_rebels = { type = uatsdin_rebels size = $size$ } } }
			uralinusko =            { PREV = { spawn_rebels = { type = uralinusko_rebels size = $size$ } } }
			vainakh	= 				{ PREV = { spawn_rebels = { type = vainakh_rebels size = $size$ } } }
			waldensian =            { PREV = { spawn_rebels = { type = waldensian_rebels size = $size$ } } }
			yazidi =         		{ PREV = { spawn_rebels = { type = yazidi_rebels size = $size$ } } }
			zikri =          		{ PREV = { spawn_rebels = { type = zikri_rebels size = $size$ } } }
			zoroastrian =           { PREV = { spawn_rebels = { type = zoroastrian_rebels size = $size$ } } }
		}
	}
}

#Province effect
spawn_province_religious_rebels = {
	trigger_switch = {
		on_trigger = religion
		anglican =              { spawn_rebels = { type = anglican_rebels size = $size$ } }
		hussite =               { spawn_rebels = { type = hussite_rebels size = $size$ } }
		animism =               { spawn_rebels = { type = animism_rebels size = $size$ } }
		bogomilist =  			{ spawn_rebels = { type = bogomilist_rebels size = $size$ } }
		buddhism =              { spawn_rebels = { type = buddhism_rebels size = $size$ } }
		cathar =              	{ spawn_rebels = { type = cathar_rebels size = $size$ } }
		catholic =              { spawn_rebels = { type = catholic_rebels size = $size$ } }
		catholique =            { spawn_rebels = { type = catholique_rebels size = $size$ } }
		coptic =                { spawn_rebels = { type = coptic_rebels size = $size$ } }
		dievturiba =            { spawn_rebels = { type = dievturiba_rebels size = $size$ } }
		druwi =                 { spawn_rebels = { type = druwi_rebels size = $size$ } }
		druze =                 { spawn_rebels = { type = druze_rebels size = $size$ } }
		egyptian_religion =     { spawn_rebels = { type = egyptian_religion_rebels size = $size$ } }
		finnish_pagan =			{ spawn_rebels = { type = finnish_pagan_rebels size = $size$ } }
		fraticelli =            { spawn_rebels = { type = fraticelli_rebels size = $size$ } }
		hellenic =   			{ spawn_rebels = { type = hellenic_pagan_rebels size = $size$ } }
		iconoclast =   			{ spawn_rebels = { type = iconoclast_rebels size = $size$ } }
		ibadi =                 { spawn_rebels = { type = ibadi_rebels size = $size$ } }
		jewish =                { spawn_rebels = { type = jewish_rebels size = $size$ } }
		khabze =                { spawn_rebels = { type = khabze_rebels size = $size$ } }
		lollardy =				{ spawn_rebels = { type = lollardy_religion_rebels size = $size$ } }
		maausko =               { spawn_rebels = { type = maausko_rebels size = $size$ } }
		mandaeism =				{ spawn_rebels = { type = mandaeism_rebels size = $size$ } }
		monothelite = 			{ spawn_rebels = { type = monothelite_rebels size = $size$ } }
		nestorian =             { spawn_rebels = { type = nestorian_rebels size = $size$ } }
		norse_pagan_reformed =  { spawn_rebels = { type = norse_pagan_reformed_rebels size = $size$ } }
		orthodox =              { spawn_rebels = { type = orthodox_rebels size = $size$ } }
		paulician =           	{ spawn_rebels = { type = paulician_rebels size = $size$ } }
		protestant =            { spawn_rebels = { type = protestant_rebels size = $size$ } }
		reformed =              { spawn_rebels = { type = reformed_rebels size = $size$ } }
		shamanism =             { spawn_rebels = { type = shamanism_rebels size = $size$ } }
		shiite =                { spawn_rebels = { type = shiite_rebels size = $size$ } }
		slavic_pagan =			{ spawn_rebels = { type = slavic_pagan_rebels size = $size$ } }
		sunni =                 { spawn_rebels = { type = sunni_rebels size = $size$ } }
		tengri_pagan_reformed = { spawn_rebels = { type = tengri_pagan_reformed_rebels size = $size$ } }
		uatsdin =				{ spawn_rebels = { type = uatsdin_rebels size = $size$ } }
		uralinusko =            { spawn_rebels = { type = uralinusko_rebels size = $size$ } }
		vainakh	= 				{ spawn_rebels = { type = vainakh_rebels size = $size$ } }
		waldensian =            { spawn_rebels = { type = waldensian_rebels size = $size$ } }
		yazidi =         		{ spawn_rebels = { type = yazidi_rebels size = $size$ } }
		zikri =          		{ spawn_rebels = { type = zikri_rebels size = $size$ } }
		zoroastrian =           { spawn_rebels = { type = zoroastrian_rebels size = $size$ } }
	}
}

#Country effect
disable_annexation_penalty = {
	custom_tooltip = disable_annexation_penalty_tt
	hidden_effect = {
		set_country_flag = no_integrate_penalty
		remove_country_modifier = annexers_legacy
	}
}

#Country effect
enable_annexation_penalty = {
	custom_tooltip = enable_annexation_penalty_tt
	hidden_effect = {
		clr_country_flag = no_integrate_penalty
	}
}

#Country effect
enable_cult_switching = {
	custom_tooltip = enable_cult_switching_tt
	hidden_effect = {
		set_country_flag = enabled_cult_switching
	}
}
enable_cult_switching_mission = {
	custom_tooltip = enable_cult_switching_tt
	hidden_effect = {
		set_country_flag = enabled_cult_switching_mission
	}
}

#Country effect
disable_cult_switching = {
	custom_tooltip = disable_cult_switching_tt
	hidden_effect = {
		clr_country_flag = enabled_cult_switching
	}
}

#Country effect
enable_development_on_buildings_built = {
	custom_tooltip = enable_development_on_buildings_built_tt
	hidden_effect = {
		set_country_flag = improve_development_on_buildings_built
	}
}

#Province effect - used for buildings
add_development_from_building = {
	if = {
		limit = {
			FROM = { has_country_flag = improve_development_on_buildings_built }
			NOT = { gained_development_from_building = { building = $building$ } }
		}
		add_base_$type$ = $value$
		hidden_effect = {
			set_province_flag = built_dev_$building$
		}
	}
}

#Province effect - used for buildings
add_development_from_upgrading_or_building = {
	if = {
		limit = {
			FROM = { has_country_flag = improve_development_on_buildings_built }
			NOT = { gained_development_from_building = { building = $building$ } }
		}
		if = {
			limit = { has_province_flag = built_dev_$obsolete_building$ }
			add_base_$type$ = $upgrade_value$
		}
		else = {
			add_base_$type$ = $value$
		}
		hidden_effect = {
			set_province_flag = built_dev_$building$
		}
	}
}

#Province effect - used for buildings
remove_development_from_building = {
	if = {
		limit = {
			FROM = { has_country_flag = improve_development_on_buildings_built }
			gained_development_from_building = { building = $building$ }
		}
		add_base_$type$ = -$value$
		if = {
			limit = {
				NOT = { base_$type$ = 1 }
			}
			set_base_$type$ = 1
		}
		hidden_effect = {
			clr_province_flag = built_dev_$building$
		}
	}
}

#Province effect
add_latest_building = {
	[[trade]
		if = {
			limit = { $builder$ = { dip_tech = 58 } }
			add_building = stock_exchange
		}
		else_if = {
			limit = { $builder$ = { dip_tech = 52 } }
			add_building = trade_depot
		}
		else_if = {
			limit = { $builder$ = { dip_tech = 36 } }
			add_building = marketplace
		}
		else_if = {
			limit = { $builder$ = { dip_tech = 20 } }
			add_building = post_office
		}
		else = {
			add_building = road_network
		}
	]
	[[government]
		if = {
			limit = { $builder$ = { adm_tech = 58 } }
			add_building = town_hall
		}
		else_if = {
			limit = { $builder$ = { adm_tech = 41 } }
			add_building = courthouse
		}
		else = {
			add_building = watchman
		}
	]
	[[production]
		if = {
			limit = { $builder$ = { adm_tech = 60 } }
			add_building = counting_house
		}
		else_if = {
			limit = { $builder$ = { adm_tech = 38 } }
			add_building = workshop
		}
		else = {
			add_building = artisan
		}
	]
	[[tax]
		if = {
			limit = { $builder$ = { adm_tech = 54 } }
			add_building = cathedral
		}
		else_if = {
			limit = { $builder$ = { adm_tech = 36 } }
			add_building = temple
		}
		else = {
			add_building = monument
		}
	]
	[[manpower]
		if = {
			limit = { $builder$ = { mil_tech = 51 } }
			add_building = training_fields
		}
		else = {
			add_building = barracks
		}
	]
	[[sailors]
		if = {
			limit = { $builder$ = { dip_tech = 54 } }
			add_building = drydock
		}
		else = {
			add_building = dock
		}
	]
	[[army_forcelimit]
		if = {
			limit = { $builder$ = { mil_tech = 57 } }
			add_building = conscription_center
		}
		else = {
			add_building = regimental_camp
		}
	]
	[[navy_forcelimit]
		if = {
			limit = { $builder$ = { dip_tech = 61 } }
			add_building = grand_shipyard
		}
		else = {
			add_building = shipyard
		}
	]
	[[coastal]
		if = {
			limit = { $builder$ = { dip_tech = 46 } }
			add_building = naval_battery
		}
		else = {
			add_building = coastal_defence
		}
	]
	[[fort]
		if = {
			limit = { $builder$ = { mil_tech = 60 } }
			add_building = fort_18th
		}
		else_if = {
			limit = { $builder$ = { mil_tech = 54 } }
			add_building = fort_17th
		}
		else_if = {
			limit = { $builder$ = { mil_tech = 48 } }
			add_building = fort_16th
		}
		else_if = {
			limit = { $builder$ = { mil_tech = 26 } }
			add_building = fort_15th
		}
		else = {
			add_building = fort_14th
		}
	]
}

#Province effect
upgrade_building = {
	[[trade]
		if = {
			limit = { has_building = trade_depot }
			add_building = stock_exchange
		}
		else_if = {
			limit = { has_building = marketplace }
			add_building = trade_depot
		}
	]
	[[government]
		if = {
			limit = { has_building = courthouse }
			add_building = town_hall
		}
	]
	[[production]
		if = {
			limit = { has_building = workshop }
			add_building = counting_house
		}
	]
	[[tax]
		if = {
			limit = { has_building = temple }
			add_building = cathedral
		}
	]
	[[manpower]
		if = {
			limit = { has_building = barracks }
			add_building = training_fields
		}
	]
	[[sailors]
		if = {
			limit = { has_building = dock }
			add_building = drydock
		}
	]
	[[army_forcelimit]
		if = {
			limit = { has_building = regimental_camp }
			add_building = conscription_center
		}
	]
	[[navy_forcelimit]
		if = {
			limit = { has_building = shipyard }
			add_building = grand_shipyard
		}
	]
	[[coastal]
		if = {
			limit = { has_building = coastal_defence }
			add_building = naval_battery
		}
	]
	[[fort]
		if = {
			limit = { has_building = fort_17th }
			add_building = fort_18th
		}
		else_if = {
			limit = { has_building = fort_16th }
			add_building = fort_17th
		}
		else_if = {
			limit = { has_building = fort_15th }
			add_building = fort_16th
		}
	]
}

#Country effect - Make sure to make an own custom tooltip for it when using it "Gain §G$years$ years§! worth of Trade Income."
add_years_of_trade_income = {
	hidden_effect = {
		set_variable = {
			which = trade_years
			value = $years$
		}
		export_to_variable = {
			which = percentage_of_yearly_trade_income
			value = trigger_value:trade_income_percentage
		}
		export_to_variable = {
			which = yearly_trade_income
			value = trigger_value:monthly_income
		}
		multiply_variable = {
			which = yearly_trade_income
			which = percentage_of_yearly_trade_income
		}
		multiply_variable = {
			which = yearly_trade_income
			value = 12
		}
		while = {
			limit = {
				check_variable = {
					which = trade_years
					value = 1
				}
			}
			set_variable = {
				which = trade_income_added
				which = yearly_trade_income
			}
			while = {
				limit = {
					check_variable = {
						which = trade_income_added
						value = 1
					}
				}
				add_treasury = 1
				subtract_variable = {
					which = trade_income_added
					value = 1
				}
			}
			multiply_variable = {
				which = trade_income_added
				value = 100
			}
			while = {
				limit = {
					check_variable = {
						which = trade_income_added
						value = 1
					}
				}
				add_treasury = 0.01
				subtract_variable = {
					which = trade_income_added
					value = 1
				}
			}
			subtract_variable = {
				which = trade_years
				value = 1
			}
		}
	}
	[[custom_tooltip]
		custom_tooltip = $custom_tooltip$
	]
}

#Country effect
select_primary_cult = {
	change_cult = $cult$
	custom_tooltip = select_primary_cult_$cult$_tt
	custom_tooltip = tooltip_$cult$
	hidden_effect = {
		set_country_flag = has_$cult$_as_primary_cult
		add_country_modifier = {
			name = primary_$cult$
			duration = -1
		}
		if = {
			limit = { has_country_flag = enabled_cult_for_heirs }
			add_country_modifier = {
				name = junior_$cult$
				duration = -1
				desc = UNTIL_HEIR_SUCCESSION_OR_DEATH
			}
		}
	}
}

#Country effect
clear_previous_primary_cults = {
	hidden_effect = {
		trigger_switch = {
			on_trigger = has_country_flag
			has_yemoja_cult_as_primary_cult = {
				clr_country_flag = has_yemoja_cult_as_primary_cult
				remove_country_modifier = junior_yemoja_cult
				remove_country_modifier = primary_yemoja_cult
			}
			has_roog_cult_as_primary_cult = {
				clr_country_flag = has_roog_cult_as_primary_cult
				remove_country_modifier = junior_roog_cult
				remove_country_modifier = primary_roog_cult
			}
			has_nyame_cult_as_primary_cult = {
				clr_country_flag = has_nyame_cult_as_primary_cult
				remove_country_modifier = junior_nyame_cult
				remove_country_modifier = primary_nyame_cult
			}
			has_cwezi_cult_as_primary_cult = {
				clr_country_flag = has_cwezi_cult_as_primary_cult
				remove_country_modifier = junior_cwezi_cult
				remove_country_modifier = primary_cwezi_cult
			}
			has_central_african_ancestor_cult_as_primary_cult = {
				clr_country_flag = has_central_african_ancestor_cult_as_primary_cult
				remove_country_modifier = junior_central_african_ancestor_cult
				remove_country_modifier = primary_central_african_ancestor_cult
			}
			has_mwari_cult_as_primary_cult = {
				clr_country_flag = has_mwari_cult_as_primary_cult
				remove_country_modifier = junior_mwari_cult
				remove_country_modifier = primary_mwari_cult
			}
			has_enkai_cult_as_primary_cult = {
				clr_country_flag = has_enkai_cult_as_primary_cult
				remove_country_modifier = junior_enkai_cult
				remove_country_modifier = primary_enkai_cult
			}
			has_waaq_cult_as_primary_cult = {
				clr_country_flag = has_waaq_cult_as_primary_cult
				remove_country_modifier = junior_waaq_cult
				remove_country_modifier = primary_waaq_cult
			}
			has_zanahary_cult_as_primary_cult = {
				clr_country_flag = has_zanahary_cult_as_primary_cult
				remove_country_modifier = junior_zanahary_cult
				remove_country_modifier = primary_zanahary_cult
			}
			has_christianity_cult_as_primary_cult = {
				clr_country_flag = has_christianity_cult_as_primary_cult
				remove_country_modifier = junior_christianity_cult
				remove_country_modifier = primary_christianity_cult
			}
			has_islam_cult_as_primary_cult = {
				clr_country_flag = has_islam_cult_as_primary_cult
				remove_country_modifier = junior_islam_cult
				remove_country_modifier = primary_islam_cult
			}
			has_buddhism_cult_as_primary_cult = {
				clr_country_flag = has_buddhism_cult_as_primary_cult
				remove_country_modifier = junior_buddhism_cult
				remove_country_modifier = primary_buddhism_cult
			}

			has_norse_cult_as_primary_cult = {
				clr_country_flag = has_norse_cult_as_primary_cult
				remove_country_modifier = junior_norse_cult
				remove_country_modifier = primary_norse_cult
			}
			has_jewish_cult_as_primary_cult = {
				clr_country_flag = has_jewish_cult_as_primary_cult
				remove_country_modifier = junior_jewish_cult
				remove_country_modifier = primary_jewish_cult
			}
			has_zoroastrian_cult_as_primary_cult = {
				clr_country_flag = has_zoroastrian_cult_as_primary_cult
				remove_country_modifier = junior_zoroastrian_cult
				remove_country_modifier = primary_zoroastrian_cult
			}
		}
	}
}

#Country effect - Triggers on monarch death - deprecated
clear_primary_cult_bonus = {
	hidden_effect = {
		trigger_switch = {
			on_trigger = has_country_modifier
			primary_yemoja_cult = {
				remove_country_modifier = primary_yemoja_cult
			}
			primary_roog_cult = {
				remove_country_modifier = primary_roog_cult
			}
			primary_nyame_cult = {
				remove_country_modifier = primary_nyame_cult
			}
			primary_cwezi_cult = {
				remove_country_modifier = primary_cwezi_cult
			}
			primary_central_african_ancestor_cult = {
				remove_country_modifier = primary_central_african_ancestor_cult
			}
			primary_mwari_cult = {
				remove_country_modifier = primary_mwari_cult
			}
			primary_enkai_cult = {
				remove_country_modifier = primary_enkai_cult
			}
			primary_waaq_cult = {
				remove_country_modifier = primary_waaq_cult
			}
			primary_zanahary_cult = {
				remove_country_modifier = primary_zanahary_cult
			}
			primary_christianity_cult = {
				remove_country_modifier = primary_christianity_cult
			}
			primary_islam_cult = {
				remove_country_modifier = primary_islam_cult
			}
			primary_buddhism_cult = {
				remove_country_modifier = primary_buddhism_cult
			}
			primary_norse_cult = {
				remove_country_modifier = primary_norse_cult
			}
			primary_jewish_cult = {
				remove_country_modifier = primary_jewish_cult
			}
			primary_zoroastrian_cult = {
				remove_country_modifier = primary_zoroastrian_cult
			}
		}
	}
}

#Country effect
enable_primary_cult = {
	custom_tooltip = enable_primary_cult_tt
	hidden_effect = {
		set_country_flag = uses_primary_cult
		country_event = {
			id = fetishist_flavor.602
		}
	}
}

#Country effect
disable_primary_cult = {
	custom_tooltip = disable_primary_cult_tt
	hidden_effect = {
		clr_country_flag = uses_primary_cult
		clr_country_flag = has_selected_a_primary_cult
		clear_previous_primary_cults = yes
	}
}

#Country effect
disable_scholar_cost = {
	custom_tooltip = disable_scholar_cost_tt
	hidden_effect = {
		set_country_flag = no_scholar_adm_cost
	}
}

#Country effect
enable_scholar_cost = {
	custom_tooltip = enable_scholar_cost_tt
	hidden_effect = {
		clr_country_flag = no_scholar_adm_cost
	}
}

#Country effect - Estate
enable_baseline_invite_scholar = {
	custom_tooltip = enable_baseline_invite_scholar_tt
	hidden_effect = {
		country_event = {
			id = muslim_school_events.24
		}
		set_country_flag = enabled_baseline_invite_scholar
	}
}

allow_baseline_invite_scholar_privilege = {
	custom_tooltip = allows_every_time_invite_of_$religious_school$
	hidden_effect = {
		set_country_flag = privilege_can_always_invite_$religious_school$
	}
	custom_tooltip = allow_baseline_invite_scholar_privilege_tt
	custom_tooltip = $religious_school$_bonus_tt
}

disallow_baseline_invite_scholar = {
	hidden_effect = {
		clr_country_flag = privilege_can_always_invite_hanafi_school
		clr_country_flag = privilege_can_always_invite_hanbali_school
		clr_country_flag = privilege_can_always_invite_maliki_school
		clr_country_flag = privilege_can_always_invite_shafii_school
		clr_country_flag = privilege_can_always_invite_ismaili_school
		clr_country_flag = privilege_can_always_invite_jafari_school
		clr_country_flag = privilege_can_always_invite_zaidi_school
		clr_country_flag = privilege_can_always_invite_ibadi_school
		clr_country_flag = privilege_can_always_invite_azraqi_school
		clr_country_flag = privilege_can_always_invite_sufri_school
		clr_country_flag = privilege_can_always_invite_alevi_school
		clr_country_flag = privilege_can_always_invite_alawi_school
		clr_country_flag = privilege_can_always_invite_nizari_school
		clr_country_flag = privilege_can_always_invite_qarmati_school
		clr_country_flag = privilege_can_always_invite_ashkenazi_school
		clr_country_flag = privilege_can_always_invite_sephardi_school
		clr_country_flag = privilege_can_always_invite_mizrahi_school
	}
}

disable_baseline_invite_scholar = {
	custom_tooltip = disable_baseline_invite_scholar_tt
	hidden_effect = {
		clr_country_flag = enabled_baseline_invite_scholar
		clr_country_flag = privilege_can_always_invite_hanafi_school
		clr_country_flag = privilege_can_always_invite_hanbali_school
		clr_country_flag = privilege_can_always_invite_maliki_school
		clr_country_flag = privilege_can_always_invite_shafii_school
		clr_country_flag = privilege_can_always_invite_ismaili_school
		clr_country_flag = privilege_can_always_invite_jafari_school
		clr_country_flag = privilege_can_always_invite_zaidi_school
		clr_country_flag = privilege_can_always_invite_ibadi_school
		clr_country_flag = privilege_can_always_invite_azraqi_school
		clr_country_flag = privilege_can_always_invite_sufri_school
		clr_country_flag = privilege_can_always_invite_alevi_school
		clr_country_flag = privilege_can_always_invite_alawi_school
		clr_country_flag = privilege_can_always_invite_nizari_school
		clr_country_flag = privilege_can_always_invite_qarmati_school
		clr_country_flag = privilege_can_always_invite_ashkenazi_school
		clr_country_flag = privilege_can_always_invite_sephardi_school
		clr_country_flag = privilege_can_always_invite_mizrahi_school
	}
}

#Country effect
enable_capital_slave_raid = {
	custom_tooltip = enable_capital_slave_raid_tt
	hidden_effect = {
		set_country_flag = enabled_capital_slave_raid
	}
	if = {
		limit = { has_dlc = "Leviathan" }
		custom_tooltip = enable_slave_raid_pillage_tt
	}
}

disable_capital_slave_raid = {
	custom_tooltip = disable_capital_slave_raid_tt
	hidden_effect = {
		clr_country_flag = enabled_capital_slave_raid
	}
	if = {
		limit = { has_dlc = "Leviathan" }
		custom_tooltip = disable_slave_raid_pillage_tt
	}
}

#On action effect
grant_manpower_from_capital_slave_raid = {
	if = {
		limit = {
			ROOT = {
				has_country_flag = enabled_capital_slave_raid
			}
			FROM = {
				owner = {
					war_with = ROOT
				}
				NOT = { has_province_modifier = estate_nobles_neighbor_raids_fort }
			}
		}
		FROM = {
			add_province_modifier = {
				name = estate_nobles_neighbor_raids_fort
				duration = 1825
			}
		}
		if = {
			limit = { FROM = { fort_level = 1 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
		if = {
			limit = { FROM = { fort_level = 2 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
		if = {
			limit = { FROM = { fort_level = 3 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
		if = {
			limit = { FROM = { fort_level = 4 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
		if = {
			limit = { FROM = { fort_level = 5 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
		if = {
			limit = { FROM = { fort_level = 6 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
		if = {
			limit = { FROM = { fort_level = 7 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
		if = {
			limit = { FROM = { fort_level = 8 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
		if = {
			limit = { FROM = { fort_level = 9 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
		if = {
			limit = { FROM = { fort_level = 10 } }
			ROOT = { add_yearly_manpower = 0.1 }
		}
	}
}

slave_raid_pillage_capital_effect = {
	ROOT = {
		if = {
			limit = {
				has_country_flag = enabled_capital_slave_raid
			}
			add_yearly_manpower = 1
			random_owned_province = {
				limit = { trade_goods = slaves }
				add_base_production = 1
			}
		}
	}
}

#Country effect
enable_tributary_state_use = {
	if = {
		limit = {
			OR = {
				has_dlc = "Mandate of Heaven"
				has_dlc = "Origins"
			}
		}
		custom_tooltip = enable_tributary_state_use_tt
	}
	hidden_effect = {
		set_country_flag = can_create_tributaries_flag
	}
}

disable_tributary_state_use = {
	if = {
		limit = {
			OR = {
				has_dlc = "Mandate of Heaven"
				has_dlc = "Origins"
			}
		}
		custom_tooltip = disable_tributary_state_use_tt
	}
	hidden_effect = {
		clr_country_flag = can_create_tributaries_flag
	}
}

#Use for estate effects
enable_tributary_state_use_estate = {
	if = {
		limit = {
			OR = {
				has_dlc = "Mandate of Heaven"
				has_dlc = "Origins"
			}
		}
		custom_tooltip = enable_tributary_state_use_tt
	}
	hidden_effect = {
		set_country_flag = can_create_tributaries_flag_estate
	}
}

disable_tributary_state_use_estate = {
	if = {
		limit = {
			OR = {
				has_dlc = "Mandate of Heaven"
				has_dlc = "Origins"
			}
		}
		custom_tooltip = disable_tributary_state_use_tt
	}
	hidden_effect = {
		clr_country_flag = can_create_tributaries_flag_estate
	}
	every_subject_country = {
		limit = {
			is_subject_of_type = tributary_state
		}
		grant_independence = yes
	}
}

#Country effect
on_culture_demoted_effect = {
	if = {
		limit = {
			has_country_modifier = plc_polish_lithuanian_union
			OR = {
				AND = {
					primary_culture = polish
					NOT = { accepted_culture = lithuanian }
				}
				AND = {
					primary_culture = lithuanian
					NOT = { accepted_culture = polish }
				}
				AND = {
					OR = {
						NOT = { accepted_culture = lithuanian }
						NOT = { accepted_culture = polish }
					}
					NOT = { primary_culture = polish }
					NOT = { primary_culture = lithuanian }
				}
			}
		}
		remove_country_modifier = plc_polish_lithuanian_union
	}
	if = {
		limit = {
			has_country_modifier = teu_pru_integration_of_the_poles
			NOT = { accepted_culture = polish }
			NOT = { primary_culture = polish }
		}
		remove_country_modifier = teu_pru_integration_of_the_poles
	}
	if = {
		limit = {
			has_country_modifier = teu_pru_integration_of_the_ruthenians
			NOT = { accepted_culture = polish }
			NOT = { primary_culture = polish }
		}
		remove_country_modifier = teu_pru_integration_of_the_ruthenians
	}	
	if = {
		limit = {
			has_country_modifier = dan_estonian_culture_accepted
			NOT = { accepted_culture = estonian }
			NOT = { primary_culture = estonian }
		}
		remove_country_modifier = dan_estonian_culture_accepted
		every_owned_province = {
			limit = {
				has_province_modifier = dan_estonian_support
			}
			remove_province_modifier = dan_estonian_support
		}
	}
}

clr_protestant_aspects_buffs = {
	if = {
		limit = { NOT = { has_church_aspect = organised_through_bishops_aspect } }
		remove_country_modifier = organised_through_bishops_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = priests_may_marry_aspect } }
		remove_country_modifier = priests_may_marry_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = adult_baptism_aspect } }
		remove_country_modifier = adult_baptism_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = holy_sacraments_aspect } }
		remove_country_modifier = holy_sacraments_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = saints_accept_prayers_aspect } }
		remove_country_modifier = saints_accept_prayers_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = icons_images_aspect } }
		remove_country_modifier = icons_images_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = legalised_divorces_aspect } }
		remove_country_modifier = legalised_divorces_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = heretics_deported_aspect } }
		remove_country_modifier = heretics_deported_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = parish_registers_aspect } }
		remove_country_modifier = parish_registers_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = individual_creeds_aspect } }
		remove_country_modifier = individual_creeds_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = allow_usury_aspect } }
		remove_country_modifier = allow_usury_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = translated_bibles_aspect } }
		remove_country_modifier = translated_bibles_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = justified_religious_war_aspect } }
		remove_country_modifier = justified_religious_war_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = war_preaches_aspect } }
		remove_country_modifier = war_preaches_aspect_modifier
	}
	if = {
		limit = { NOT = { has_church_aspect = head_of_the_church_aspect } }
		remove_country_modifier = head_of_the_church_aspect_modifier
	}
}

#Credits for that script goes to Stiopa
for = {
    set_variable = {
        which = ForLoopCounter
        value = $amount$
    }

    while = {
        limit = {
            check_variable = {
                which = ForLoopCounter
                value = 1
            }
        }
        $effect$
        subtract_variable = {
            which = ForLoopCounter
            value = 1
        }
    }
}

add_prestige_or_monarch_power = {
    tooltip = {
        add_prestige = $amount$
    }
    custom_tooltip = ME_ADD_PRESTIGE_OR_MONARCHPOWER
    hidden_effect = {
        for = {
            amount = $amount$
            effect = "
                if = {
                    limit = {
                        NOT = { prestige = 100 }
                    }
                    add_prestige = 1
                }
                else = {
                    add_adm_power = 1
                    add_dip_power = 1
                    add_mil_power = 1
                }
            "
        }
    }
}

add_stat_or_monarch_power = {
    tooltip = {
        change_$stat$ = $amount$
    }
    custom_tooltip = ADD_STAT_OR_POWER_$stat$
    hidden_effect = {
		set_variable = {
			which = ForLoopCounter
			value = $amount$
		}
		while = {
			limit = {
				check_variable = {
					which = ForLoopCounter
					value = 1
				}
			}
			if = {
				limit = {
					NOT = { $stat$ = 6 }
				}
				change_$stat$ = 1
			}
			else = {
				add_$stat$_power = 100
			}
			subtract_variable = {
				which = ForLoopCounter
				value = 1
			}
		}
    }
}

for_variable_amount = {
    set_variable = {
        which = ForLoopCounter
        which = $variable$
    }

    while = {
        limit = {
            check_variable = {
                which = ForLoopCounter
                value = 1
            }
        }
        $effect$
        subtract_variable = {
            which = ForLoopCounter
            value = 1
        }
    }
}


##########################################################
# Supports following types of units
# artillery
# cavalry
# infantry
# mercenary_infantry
# mercenary_cavalry
# heavy_ship
# light_ship
# galley
# transport
# <unit name> 
##########################################################
#Country effect
# For tooltip use the following scheme: "§Y<amount>§! of §Y<unit_type>§! will be created in §Y[<province>.GetName]§! for §Y[This.GetName]§!."
create_units_of_type = {
	[[custom_tooltip]
		custom_tooltip = $custom_tooltip$
	]
	hidden_effect = {
		for = {
			amount = $amount$
			effect = "
				$province$ = { $unit_type$ = PREV }
			"
		}
	}
}

#Province effect
# For tooltip use the following scheme: "§Y<amount>§! of §Y<unit_type>§! will be created in §Y[This.GetName]§! for §Y[<who>.GetName]§!."
create_units_of_type_in_province = {
	[[custom_tooltip]
		custom_tooltip = $custom_tooltip$
	]
	hidden_effect = {
		$who$ = {
			for = {
				amount = $amount$
				effect = "
					PREV = { $unit_type$ = $who$ }
				"
			}
		}
	}
}

#Country effect
##########################################################
# Supports following factions (aka. has tooltips for them)
# mr_aristocrats
# mr_traders
# mr_guilds
# rr_jacobins
# rr_royalists
# rr_girondists
# pr_buccaneers
# pr_smugglers
# pr_captains
##########################################################
faction_in_power_effect = {
	if = {
		limit = { has_faction = $faction$ }
		if = {
			limit = { faction_in_power = $faction$ }
			custom_tooltip = $faction$_are_currently_in_power_tt
			$effect$
		}
		else = {
			custom_tooltip = $faction$_in_power_tt
			tooltip = {
				$effect$
			}
		}
	}
}

## adds the culture as an accepted culture or 100 dip power
### add_accepted_culture_or_dip_power = { culture = <culture> }
### the custom effect is only able to check for up to 10 culture slots
#Credits for that script goes to Stiopa
add_accepted_culture_or_dip_power = {
	tooltip = {
		add_accepted_culture = $culture$
	}
	custom_tooltip = ADD_ACCEPTED_CULTURE_TT # "If the §YCulture§! is already an §YAccepted Culture§!, or if there are not enough §YSlots§!, gain §G100§! Diplomatic Power instead."
	hidden_effect = {
		if = {
			limit = {
				accepted_culture = $culture$
			}
			add_dip_power = 100
		}
		else_if = {
			limit = {
				primary_culture = $culture$
			}
			add_dip_power = 100
		}
		else_if = {
			limit = {
				num_accepted_cultures = 10
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 11
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				num_accepted_cultures = 9
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 10
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				num_accepted_cultures = 8
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 9
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				num_accepted_cultures = 7
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 8
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				num_accepted_cultures = 6
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 7
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				num_accepted_cultures = 5
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 6
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				num_accepted_cultures = 4
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 5
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				num_accepted_cultures = 3
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 4
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				num_accepted_cultures = 2
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 3
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				num_accepted_cultures = 1
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 2
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else_if = {
			limit = {
				NOT = { num_accepted_cultures = 1 }
			}
			if = {
				limit = {
					has_global_modifier_value = {
						which = num_accepted_cultures
						value = 1
					}
				}
				add_accepted_culture = $culture$
			}
			else = {
				add_dip_power = 100
			}
		}
		else = {
			add_dip_power = 100
		}
	}
}

#Use this scripted in the on_actions file, on_battle_won_country
count_won_battles_and_reward_at_end = {
	if = {
		limit = {
			ROOT = {
				has_country_flag = $counting_flag$	#Using country flags because we don't want a country to stack a variable out of control and cause performance issue because of large variables.
			}
		}
		ROOT = {
			change_variable = {
				which = num_won_battles
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = {
				has_country_flag = $counting_flag$
				check_variable = {
					which = num_won_battles
					value = $max_value$
				}
			}
		}
		ROOT = {
			clr_country_flag = $counting_flag$
            $effect$
		}
	}
}

fifty_percent_merc_army_professionalism_cost = {
	custom_tooltip = fifty_percent_merc_army_professionalism_cost_tt
	hidden_effect = {
		set_country_flag = fifty_percent_merc_army_professionalism_cost
	}
}

increase_issue_passed_counter = {
	hidden_effect = {
		change_variable = {
			which = issues_passed
			value = 1
		}
	}
}

#Province effect
set_center_level_3_center_of_trade = {
	if = {
		limit = { NOT = { province_has_center_of_trade_of_level = 1 } }
		center_of_trade = 3
	}
	else = {
		if = {
			limit = { province_has_center_of_trade_of_level = 3 }
			add_base_production = 4
		}
		else_if = {
			limit = { province_has_center_of_trade_of_level = 2 }
			add_base_production = 2
			add_center_of_trade_level = 1
		}
		else = {
			add_center_of_trade_level = 2
		}
	}
}

set_center_level_2_center_of_trade = {
	if = {
		limit = { NOT = { province_has_center_of_trade_of_level = 1 } }
		center_of_trade = 2
	}
	else = {
		if = {
			limit = { province_has_center_of_trade_of_level = 2 }
			add_base_production = 2
		}
		else = {
			add_center_of_trade_level = 1
		}
	}
}

enable_admirals_army_professionalism = {
	if = {
		limit = { has_dlc = "Cradle of Civilization" }
		custom_tooltip = admirals_give_army_professionalism_tt
	}
	hidden_effect = {
		set_country_flag = admirals_give_army_professionalism
	}
}

make_ruler_to_legendary_pirate = {
	if = {
		limit = {
			has_dlc = "Rights of Man"
			NOT = { num_of_ruler_traits = { amount = 3 } }
		}
		add_ruler_personality = legendary_pirate_personality
		custom_tooltip = legendary_pirate_personality_at
	}
	else = {
		custom_tooltip = legendary_pirate_personality_bt
	}
	set_ruler_flag = historical_pirate
	random_list = {
		1 = { trigger = { NOT = { ADM = 6 } } change_adm = 1 }
		1 = { trigger = { NOT = { DIP = 6 } } change_dip = 1 }
		1 = { trigger = { NOT = { MIL = 6 } } change_mil = 1 }
	}
}

add_influence_to_random_faction = {
	random_list = {
		1 = {
			trigger = {
				has_faction = rr_girondists
			}
			add_faction_influence = {
				faction = rr_girondists
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = rr_jacobins
			}
			add_faction_influence = {
				faction = rr_jacobins
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = rr_royalists
			}
			add_faction_influence = {
				faction = rr_royalists
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = pr_buccaneers
			}
			add_faction_influence = {
				faction = pr_buccaneers
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = pr_captains
			}
			add_faction_influence = {
				faction = pr_captains
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = pr_smugglers
			}
			add_faction_influence = {
				faction = pr_smugglers
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = mr_aristocrats
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = mr_guilds
			}
			add_faction_influence = {
				faction = mr_guilds
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = mr_traders
			}
			add_faction_influence = {
				faction = mr_traders
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = tur_militarists
			}
			add_faction_influence = {
				faction = tur_militarists
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = tur_lalas
			}
			add_faction_influence = {
				faction = tur_lalas
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = tur_pacifists
			}
			add_faction_influence = {
				faction = tur_pacifists
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = abb_cluniacs
			}
			add_faction_influence = {
				faction = abb_cluniacs
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = abb_cistercians
			}
			add_faction_influence = {
				faction = abb_cistercians
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = abb_benedictines
			}
			add_faction_influence = {
				faction = abb_benedictines
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = cla_flatha
			}
			add_faction_influence = {
				faction = cla_flatha
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = cla_filid
			}
			add_faction_influence = {
				faction = cla_filid
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = cla_druid
			}
			add_faction_influence = {
				faction = cla_druid
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = pap_orsini
			}
			add_faction_influence = {
				faction = pap_orsini
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = pap_colonna
			}
			add_faction_influence = {
				faction = pap_colonna
				influence = $influence$
			}
		}
		1 = {
			trigger = {
				has_faction = pap_roman_mob
			}
			add_faction_influence = {
				faction = pap_roman_mob
				influence = $influence$
			}
		}
	}
}

add_influence_to_adm_faction = {
	if = {
		limit = { 
			has_faction = mr_guilds 
		}
		add_faction_influence = {
			faction = mr_guilds
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = pr_buccaneers 
		}
		add_faction_influence = {
			faction = pr_buccaneers
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = rr_jacobins 
		}
		add_faction_influence = {
			faction = rr_jacobins
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = tur_pacifists
		}
		add_faction_influence = {
			faction = tur_pacifists
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = abb_benedictines
		}
		add_faction_influence = {
			faction = abb_benedictines
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = cla_druid
		}
		add_faction_influence = {
			faction = cla_druid
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = pap_orsini
		}
		add_faction_influence = {
			faction = pap_orsini
			influence = $influence$
		}				
	}
}

add_influence_to_dip_faction = {
	if = {
		limit = { 
			has_faction = mr_traders 
		}
		add_faction_influence = {
			faction = mr_traders
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = pr_smugglers 
		}
		add_faction_influence = {
			faction = pr_smugglers
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = rr_royalists 
		}
		add_faction_influence = {
			faction = rr_royalists
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = tur_lalas
		}
		add_faction_influence = {
			faction = tur_lalas
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = abb_cluniacs
		}
		add_faction_influence = {
			faction = abb_cluniacs
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = cla_filid
		}
		add_faction_influence = {
			faction = cla_filid
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = pap_colonna
		}
		add_faction_influence = {
			faction = pap_colonna
			influence = $influence$
		}				
	}
}

add_influence_to_mil_faction = {
	if = {
		limit = { 
			has_faction = mr_aristocrats 
		}
		add_faction_influence = {
			faction = mr_aristocrats
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = pr_captains 
		}
		add_faction_influence = {
			faction = pr_captains
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = rr_girondists 
		}
		add_faction_influence = {
			faction = rr_girondists
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = tur_militarists
		}
		add_faction_influence = {
			faction = tur_militarists
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = abb_cistercians
		}
		add_faction_influence = {
			faction = abb_cistercians
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = cla_flatha
		}
		add_faction_influence = {
			faction = cla_flatha
			influence = $influence$
		}				
	}
	if = {
		limit = { 
			has_faction = pap_roman_mob
		}
		add_faction_influence = {
			faction = pap_roman_mob
			influence = $influence$
		}				
	}
}

on_harmonized_effect = {
	if = {
		limit = {
			has_government_attribute = full_loyalty_on_harmonization
		}
		add_estate_loyalty = {
			estate = estate_church
			loyalty = 100
		}
		add_adm_power = 50
	}
}

on_completed_agenda_effect_church = {
	if = {
		limit = { has_government_attribute = clergy_estate_agendas_gives_karma }
		add_karma = 10
	}
}

show_points_needed_for_livionian_government_of_category = {
	[[adm]
		if = {
			limit = { NOT = { check_variable = { which = liv_adm value = 5 } } }
			custom_tooltip = livonian_administrative_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_adm value = 4 } } }
			custom_tooltip = livonian_absolute_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_adm value = 3 } } }
			custom_tooltip = livonian_trade_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_adm value = 3 } } }
			custom_tooltip = livonian_constitutional_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_adm value = 3 } } }
			custom_tooltip = livonian_theocratic_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_adm value = 2 } } }
			custom_tooltip = livonian_enlightened_monarchy_points_needed_tt
		}
	]
	[[dip]
		if = {
			limit = { NOT = { check_variable = { which = liv_dip value = 5 } } }
			custom_tooltip = livonian_naval_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_dip value = 4 } } }
			custom_tooltip = livonian_diplomatic_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_dip value = 4 } } }
			custom_tooltip = livonian_admiral_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_dip value = 3 } } }
			custom_tooltip = livonian_trade_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_dip value = 3 } } }
			custom_tooltip = livonian_elective_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_dip value = 3 } } }
			custom_tooltip = livonian_naval_controlled_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_dip value = 2 } } }
			custom_tooltip = livonian_enlightened_monarchy_points_needed_tt
		}
	]
	[[mil]
		if = {
			limit = { NOT = { check_variable = { which = liv_mil value = 5 } } }
			custom_tooltip = livonian_military_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_mil value = 4 } } }
			custom_tooltip = livonian_general_controlled_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_mil value = 3 } } }
			custom_tooltip = livonian_theocratic_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_mil value = 3 } } }
			custom_tooltip = livonian_mercenary_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_mil value = 3 } } }
			custom_tooltip = livonian_naval_controlled_monarchy_points_needed_tt
		}
		if = {
			limit = { NOT = { check_variable = { which = liv_mil value = 2 } } }
			custom_tooltip = livonian_enlightened_monarchy_points_needed_tt
		}
	]
}